      async get${targetObjName}(root, args, context, ast) {
        let db = await (typeof root.db === "function" ? root.db() : root.db);
        context.__mongodb = db;
        let queryPacket = decontructGraphqlQuery(args, ast, ${targetTypeName}Metadata, "${targetTypeName}s");
        let result = {};
        queryPacket.$project = {_id: 1}
        let ${targetTypeName} = await load${targetTypeName}s(db, queryPacket, root, args, context, ast);
        if(${targetTypeName}){
          result.${targetObjName} = {
            ${keyField}: ${targetTypeName}.map(num => ""+num._id)
          }
        }
        if (queryPacket.metadataRequested.size) {
          result.Meta = {};
          if (queryPacket.metadataRequested.get("count")) {
            let countResults = await dbHelpers.runQuery(db, "${table}", [{ $match: queryPacket.$match }, { $group: { _id: null, count: { $sum: 1 } } }]);
            result.Meta.count = countResults.length ? countResults[0].count : 0;
          }
        }

        return result;
      }
